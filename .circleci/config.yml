version: 2.0
jobs:
  install_node_in_ruby_image:
    docker:
      - image: circleci/ruby:2.4.2-jessie-node
    steps:
      - checkout
      - run:
          name: "Update Node.js and npm"
          command: |
            curl -sSL "https://nodejs.org/dist/v11.10.0/node-v11.10.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v11.10.0-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash
      - run:
          name: Check current version of node
          command: pwd && ls && node -v


# task 4
  "ruby-2.2":
    docker:
      - image: circleci/ruby:2.2-node
      - image: circleci/postgres:9.4.12-alpine
    working_directory: ~/ruby22
    steps:
      - checkout
      - run: pwd && ls -al
      - run: cd ./oppgave-1-task4
      - run: bundle install --path vendor/bundle
      - run: bundle exec rake db:create db:schema:load
      - run: rake

  "ruby-2.3":
    docker:
      - image: circleci/ruby:2.3-node
      - image: circleci/postgres:9.4.12-alpine
    working_directory: ~/ruby23
    steps:
      - checkout
      - run: pwd && ls -al
      - run: cd ./oppgave-1-task4
      - run: bundle install --path vendor/bundle
      - run: bundle exec rake db:create db:schema:load
      - run: rake

  "ruby-2.4":
    docker:
      - image: circleci/ruby:2.4-node
      - image: circleci/postgres:9.4.12-alpine
    working_directory: ~/ruby24
    steps:
      - checkout
      - run: pwd && ls -al
      - run: cd ./oppgave-1-task4
      - run: bundle install --path vendor/bundle
      - run: bundle exec rake db:create db:schema:load
      - run: rake

workflows:
  version: 2
  build:
    jobs:
      - install_node_in_ruby_image
      - "ruby-2.2"
      - "ruby-2.3"
      - "ruby-2.4"

# task5
#version: 2
#jobs:
#  build:
#
#    working_directory: ~/circleci-demo-java-spring
#
#    docker:
#      - image: circleci/openjdk:8-jdk-browsers
#      - image: circleci/postgres:9.6.3-alpine
#        environment:
#          POSTGRES_USER: root
#          POSTGRES_DB: circle_test
#
